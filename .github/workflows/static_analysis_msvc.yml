name: Static Code Analysis

on:
  push:
    branches:
        - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  INEXOR_VULKAN_SDK_VERSION: "1.3.283.0"
  INEXOR_VULKAN_SDK_PATH: "${{ github.workspace }}/vulkan_sdk"

jobs:
  windows:
    name: MSVC ${{ matrix.config.name }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Debug",
              compiler: "msvc",
              cc: "cl",
              cxx: "cl",
              cmake_configure_options: '-G "Visual Studio 17 2022" -A x64',
              build_type: "Debug",
              cmake_build_options: "--config Debug"
            }
          - {
              name: "Release",
              compiler: "msvc",
              cc: "cl",
              cxx: "cl",
              cmake_configure_options: '-G "Visual Studio 17 2022" -A x64',
              build_type: "Release",
              cmake_build_options: "--config Release"
            }

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Update Environment
        run: pip3 install wheel setuptools
        
      - name: Set Build Date
        run: echo "BUILD_DATE=$(Get-Date -Format 'dd_MMM_yyyy_HHmmss')" >> $env:GITHUB_ENV

      - name: Check Cache for Vulkan SDK
        id: cache-vulkan
        uses: actions/cache@v4
        with:
          path: ${{ env.INEXOR_VULKAN_SDK_PATH }}
          key: vulkan-sdk-${{ env.INEXOR_VULKAN_SDK_VERSION }}-${{ runner.os }}

      - name: Download Vulkan SDK
        if: steps.cache-vulkan.outputs.cache-hit != 'true'
        run: |
          curl -LS -o vulkansdk.exe https://sdk.lunarg.com/sdk/download/${{ env.INEXOR_VULKAN_SDK_VERSION }}/windows/VulkanSDK-${{ env.INEXOR_VULKAN_SDK_VERSION }}-Installer.exe
          7z x -y vulkansdk.exe -o"${{ env.INEXOR_VULKAN_SDK_PATH }}"

      - name: Check Cache for CMake Files (Static Code Analysis)
        id: cache-cmake-analysis
        uses: actions/cache@v4
        with:
          path: build-analysis
          key: cmake-analysis-${{ runner.os }}-${{ matrix.config.compiler }}-${{ matrix.config.build_type }}-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt', '**/*.cmake') }}

      - name: Configure CMake (Static Code Analysis)
        if: steps.cache-cmake-analysis.outputs.cache-hit != 'true'
        run: |
          $env:CC="${{ matrix.config.cc }}"
          $env:CXX="${{ matrix.config.cxx }}"
          $env:Path += ";${{ env.INEXOR_VULKAN_SDK_PATH }}\;${{ env.INEXOR_VULKAN_SDK_PATH }}\Bin\"
          $env:VULKAN_SDK="${{ env.INEXOR_VULKAN_SDK_PATH }}"
          cmake . `
            -Bbuild-analysis `
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} `
            -DINEXOR_BUILD_BENCHMARKS=ON `
            -DINEXOR_BUILD_TESTS=ON `
            -DCMAKE_CXX_FLAGS=/analyze `
            ${{ matrix.config.cmake_configure_options }}

      - name: Run MSVC Static Code Analysis
        run: |
          cmake --build build-analysis --target inexor-vulkan-renderer --config ${{ matrix.config.build_type }} > analysis.txt 2>&1 || true
          cmake --build build-analysis --target inexor-vulkan-renderer-example --config ${{ matrix.config.build_type }} >> analysis.txt 2>&1 || true
          cmake --build build-analysis --target inexor-vulkan-renderer-tests --config ${{ matrix.config.build_type }} >> analysis.txt 2>&1 || true
          cmake --build build-analysis --target inexor-vulkan-renderer-benchmarks --config ${{ matrix.config.build_type }} >> analysis.txt 2>&1 || true

      - name: Upload Static Analysis Report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_DATE}}_Windows_${{ matrix.config.build_type }}_${{ matrix.config.compiler }}_Static_Code_Analysis
          path: analysis.txt
          retention-days: 60
