name: Static Analysis

on:
  push:
    branches:
        - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  cppcheck:
    name: Cppcheck
    runs-on: ubuntu-latest
    container: ubuntu:rolling
    env:
      DEBIAN_FRONTEND: "noninteractive"
      INEXOR_VULKAN_VERSION: "1.3.283.0"
      INEXOR_VULKAN_SDK_PATH: "$GITHUB_WORKSPACE/../vulkan_sdk/"
      INEXOR_VULKAN_SDK_CHECKSUM_LINUX: "8005e2cf3e89c80cbe1c0d0a259c88248de3257b4fc6fdefb47409edb3e43ecb"

    steps:
      - name: Update environment and install dependencies
        run: |
          apt update -qq
          apt-get install -y \
            cppcheck \
            cmake \
            curl \
            git \
            grep \
            ninja-build \
            libgl1-mesa-dev \
            libwayland-dev \
            libxkbcommon-dev \
            libx11-dev \
            libx11-xcb-dev \
            libxcb-dri3-dev \
            libxcb-icccm4-dev \
            libxcb-image0-dev \
            libxcb-keysyms1-dev \
            libxcb-randr0-dev \
            libxcb-render-util0-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-sync-dev \
            libxcb-util-dev \
            libxcb-xfixes0-dev \
            libxcb-xinerama0-dev \
            libxcb-xkb-dev \
            parallel \
            xkb-data \
            xorg-dev \
            pkg-config \
            python3 \
            python3-pip \
            xz-utils
          pip3 install --break-system-packages wheel setuptools

      - name: Install Vulkan SDK
        shell: bash
        run: |
          curl -LS -o vulkansdk.tar.xz https://sdk.lunarg.com/sdk/download/${{ env.INEXOR_VULKAN_VERSION }}/linux/vulkansdk-linux-x86_64-${{ env.INEXOR_VULKAN_VERSION }}.tar.xz
          echo "${{ env.INEXOR_VULKAN_SDK_CHECKSUM_LINUX }} vulkansdk.tar.xz" | sha256sum --check
          mkdir -p "${{ env.INEXOR_VULKAN_SDK_PATH }}"
          tar xf vulkansdk.tar.xz -C "${{ env.INEXOR_VULKAN_SDK_PATH }}"
          rm -f vulkansdk.tar.xz
          apt-get -y install qtbase5-dev libxcb-xinput0 libxcb-xinerama0
          rm -rf "${{ env.INEXOR_VULKAN_SDK_PATH }}/${{ env.INEXOR_VULKAN_VERSION }}/x86_64/lib/cmake/volk/"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find source files for cppcheck
        id: find_sources
        run: |
          find example src include \
            -path '*/_deps/*' -prune -o \
            -path '*/build/*' -prune -o \
            \( -name '*.cpp' -o -name '*.hpp' \) -print > source_files.txt
          cat source_files.txt

      - name: Run cppcheck on source_files.txt
        run: |
          # Use xargs to run cppcheck on all files listed in source_files.txt
          xargs -a source_files.txt cppcheck \
            --enable=all \
            --inconclusive \
            --force \
            --suppress=missingIncludeSystem \
            --inline-suppr \
            2> cppcheck_output.txt || true

      - name: Summarize cppcheck warnings
        run: |
          cat cppcheck_output.txt | sort | uniq -c | sort -nr || true
