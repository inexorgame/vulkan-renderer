VMA dumps
=========

- For memory management, Inexor uses `AMD's Vulkan Memory Allocator library (VMA) <https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator>`__.
- VMA can export an overview of the current GPU memory allocations into a JSON file which can be convertex into an image using `VMA's VmaDumpVis <https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/blob/master/tools/VmaDumpVis/README.md>`__.
- This way, we can see which memory pools exist, which memory block are allocated, and what they are used for. 
- The example image provided here might look very simple, but with increasing complexity of our engine this will turn out very helpful.
- You can see an memory allocation overview image generated by `VmaDumpVis <https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/blob/master/tools/VmaDumpVis/README.md>`__. for a big AAA game `here <https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/blob/master/tools/VmaDumpVis/README.md#example-output>`__.

This is a very simple example of such an image generated with `VmaDumpVis <https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/blob/master/tools/VmaDumpVis/README.md>`__:

.. image:: images/vma_dump_example.png
    :width: 600
    :alt: Example of a memory allocation overview generated by VmaDumpVis.

**Example: march 2020 texture memory corruption bug**

- In march 2020, a `bug in Inexor's early graphics memory management <https://community.khronos.org/t/texture-corruption-when-window-is-resized/105456>`__ caused textures to corrupt on window resize.
-  VmaDumpVis helped to resolve the issue by proving the memory consumption increased after each resize, which means the texture memory was simply not freed when the swapchain was recreated.
- This is an example of how VMA and VmaDumpVis make debugging graphics memory easier.

.. image:: images/vma_saves_the_day.png
    :width: 600
    :alt: Example of a VmaDumpVis being used to detect memory leaks.
